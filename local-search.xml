<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Spark安装</title>
    <link href="/2023/09/23/Spark%E5%AE%89%E8%A3%85/"/>
    <url>/2023/09/23/Spark%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h1 id="spark安装">Spark安装</h1><h2 id="环境准备">环境准备</h2><ul><li><p>Linux（CentOS7）</p></li><li><p>Hadoop（3.1.3）</p></li><li><p>JDK（1.8）</p></li></ul><h2 id="下载spark安装包">1.下载Spark安装包</h2><p>访问Spark官网下载Spark安装文件（笔者这里选择的是2.7版本），将其放到<code>/opt/software</code>目录下。</p><p>下载玩安装文件后，需要对文件进行解压，执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ tar -zxvf spark-2.4.8-bin-hadoop2.7.tgz -C /opt/module<br></code></pre></td></tr></table></figure><p>将其解压到<code>/opt/module/</code>目录下。</p><p>修改spark目录名称。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> /opt/module<br>$ <span class="hljs-built_in">mv</span> spark-2.4.8-bin-hadoop2.7/ ./spark-2.4.8<br></code></pre></td></tr></table></figure><h2 id="配置相关文件">2.配置相关文件</h2><p>安装文件解压缩后，还需修改Spark的配置文件spark-env.sh。首先复制一份Spark安装文件自带的配置文件模板以修改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> spark-2.4.8/<br>$ <span class="hljs-built_in">cp</span> ./conf/spark-env.sh.template ./conf/spark-env.sh<br></code></pre></td></tr></table></figure><p>然后使用vim编辑器打开spark-env.sh文件进行编辑，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ vim ./conf/spark-env.sh<br></code></pre></td></tr></table></figure><p>在文件第一行添加配置信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> SPARK_DIST_CLASSPATH=$(/opt/module/hadoop-3.1.3/bin/hadoop classpath) <br><span class="hljs-comment">#括号里是/hadoop安装目录/bin/hadoop空格后直接输classpath</span><br></code></pre></td></tr></table></figure><p>添加后保存，这样Spark就可以把数据存储到Hadoop分布式文件系统HDFS中，也可以从HDFS中读取数据。</p><h2id="通过实例验证spark是否安装成功">3.通过实例验证Spark是否安装成功</h2><p>进入到Spark目录下，执行实例SparkPi</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> /opt/module/spark-2.4.8/<br>$ bin/run-example SparkPi<br></code></pre></td></tr></table></figure><p>执行命令会输出很多屏幕信息，不容易找到输出结果，通过<code>grep</code>命令过滤,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ bin/run-example SparkPi  2&gt;&amp;1 |grep <span class="hljs-string">&quot;Pi is roughly&quot;</span><br></code></pre></td></tr></table></figure><p>过滤后得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Pi is roughly 3.1533357666788335<br></code></pre></td></tr></table></figure><p>可以得到<span class="math inline">\(\pi\)</span>的近似值。</p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>浮点数</title>
    <link href="/2023/09/22/%E6%B5%AE%E7%82%B9%E6%95%B0/"/>
    <url>/2023/09/22/%E6%B5%AE%E7%82%B9%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="浮点数表示与运算">浮点数表示与运算</h1><h2 id="浮点数表示">浮点数表示</h2><h3 id="科学计数法">科学计数法</h3><p>比如说 326,000,000 用科学计数法表示能表示为 $ 3.26*10^8 $减少0的无意义表示。</p><p>类似的，浮点数由 阶符 + 阶码 + 尾数 表示。</p><p>阶符表示阶码的符号，一般只占1位。</p><p>阶码用移码表示，在单精度浮点数(float)中占8位，在双精度浮点数(double)中占11位。</p><p>阶码在全0或全1有特殊含义，所以阶码能表示的数值范围在<spanclass="math inline">\(2^n \-2\)</span>。</p><p>尾数使用补码表示，</p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>scala基础</title>
    <link href="/2023/09/22/scala%E5%9F%BA%E7%A1%80/"/>
    <url>/2023/09/22/scala%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="安装scala">安装Scala</h2><p>直接在centos里输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://downloads.lightbend.com/scala/2.11.12/scala-2.11.12.rpm<br></code></pre></td></tr></table></figure><p>下载Scala的yum安装包</p><p>输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install scala-2.11.12.rpm<br></code></pre></td></tr></table></figure><p>安装Scala完成</p><h2 id="编写helloworld">编写HelloWorld</h2><p>创建HelloWorld.scala文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim HelloWorld.scala<br></code></pre></td></tr></table></figure><p>在文件中输入</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs scala"><span class="hljs-class"><span class="hljs-keyword">object</span> <span class="hljs-title">HelloWorld</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span></span>(args:<span class="hljs-type">Array</span>[<span class="hljs-type">String</span>]): <span class="hljs-type">Unit</span> = &#123;<br>        <span class="hljs-keyword">val</span> names=<span class="hljs-type">Array</span>(<span class="hljs-string">&quot;test1&quot;</span>,<span class="hljs-string">&quot;test2&quot;</span>,<span class="hljs-string">&quot;test3&quot;</span>)<br>        println(names(<span class="hljs-number">2</span>))<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>输入编译命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">scalac HelloWorld.scala<br></code></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">scala HelloWorld<span class="hljs-comment">#scala &lt;类名&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>修改博客主题并添加导航栏图标的各页面</title>
    <link href="/2023/09/21/%E4%BF%AE%E6%94%B9%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%AF%BC%E8%88%AA%E6%A0%8F%E5%9B%BE%E6%A0%87%E7%9A%84%E5%90%84%E9%A1%B5%E9%9D%A2/"/>
    <url>/2023/09/21/%E4%BF%AE%E6%94%B9%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%AF%BC%E8%88%AA%E6%A0%8F%E5%9B%BE%E6%A0%87%E7%9A%84%E5%90%84%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h1id="修改博客主题并添加导航栏图标的各页面">修改博客主题并添加导航栏图标的各页面</h1><h2 id="修改博客主题">修改博客主题</h2><p>下载自己想要的博客主题并解压到博客目录下的theme目录中，这里选择的时hexo-fluid主题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> blog/theme<span class="hljs-comment">#进入博客目录下的主题目录</span><br>$ https://github.com/fluid-dev/hexo-theme-fluid.git<span class="hljs-comment">#在主题目录中克隆GitHub上的fluid主题文件</span><br></code></pre></td></tr></table></figure><p>修改主题文件夹为fluid。</p><p>打开博客目录下的_config.yml文件，修改主题。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span><span class="hljs-comment">#需与主题目录下的文件夹名相同</span><br></code></pre></td></tr></table></figure><p>修改语言为中文。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span><br></code></pre></td></tr></table></figure><p>保存退出。</p><p>复制_config.yml内的内容，新建一个_congfig.fluid.yml的文件，将内容复制进新建的_config.fluid.yml文件。</p><p>以后需要修改配置只需修改_config.fluid.yml文件，而不需要修改_config.yml文件。</p><h2 id="添加关于页">添加关于页</h2><p>用Git打开命令行窗口，输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new page about<br></code></pre></td></tr></table></figure><p>然后Hexo会在博客的source目录下的about的目录下新建index.md来作为生成的关于页。</p><p>打开about目录下的index.md文件，添加layout属性</p><p>修改后的文件示例如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: 标题<br><span class="hljs-section">layout: about</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure><p>修改完成，清理缓存重新生成页面即可显示。</p><p>类似的</p><h2 id="添加分类页和标签页">添加分类页和标签页</h2><p>用Git打开命令行窗口，输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new page categories<span class="hljs-comment">#生成分类页</span><br>$ hexo new page tag<span class="hljs-comment">#生成标签页</span><br></code></pre></td></tr></table></figure><p>然后Hexo会在博客的source目录下的categories/tag的目录下新建index.md来作为生成的分类页/标签页。</p><p>打开categories/tag目录下的index.md文件，添加type属性</p><p>修改后的文件示例如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: 标题<br><span class="hljs-section">type: categories&lt;!-- 分类页type后选择categories，标签页type后选择tag --&gt;</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure><p>修改完成，清理缓存重新生成页面即可显示。</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>使用Hexo搭建个人博客</title>
    <link href="/2023/09/21/%E4%BD%BF%E7%94%A8hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/09/21/%E4%BD%BF%E7%94%A8hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="使用hexo搭建个人博客">使用Hexo搭建个人博客</h1><h2 id="环境搭建准备">1.环境搭建准备</h2><p>安装Hexo非常简单，需要先安装下列应用程序：</p><p>Node.js</p><p>Git</p><h2 id="安装hexo">2.安装Hexo</h2><p>我们可以使用Node.js自带的npm安装Hexo。</p><p>使用Git打开命令窗口（右键选择Git BashHere），输入以下命令一键下载Hexo。（以下为bash的代码都是通过Git命令行实现）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install -g hexo-cli<br></code></pre></td></tr></table></figure><h2 id="初始化hexo">3.初始化Hexo</h2><p>安装完成后，执行以下命令，Hexo会在指定文件夹中生成所需文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo init &lt;文件夹名&gt;<br></code></pre></td></tr></table></figure><p>进入到该文件夹目录下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> &lt;文件夹名&gt;<br></code></pre></td></tr></table></figure><p>下载所需的软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install <br></code></pre></td></tr></table></figure><h2 id="搭建github-page仓库并完成配置">4.搭建GitHubPage仓库并完成配置</h2><p>首先需要在Github上注册账号</p><p>在点击账户旁边的 + ，再点击Newrepository新建仓库，按自己的喜好配置完后点击Createrepository完成仓库的创建。</p><p>进入到新建的仓库页面后，点击导航栏里的Settings，侧边栏选择Page。记住自己的仓库的site网址。修改分支Branch从main改为master。</p><h2id="本地配置github账户实现免密登陆">5.本地配置GitHub账户实现免密登陆</h2><p>打开Git命令窗口，根据自己注册的GitHub账户设置用户名和邮箱。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global user.name <span class="hljs-string">&quot;GitHub 用户名&quot;</span><br>$ git config --global user.email <span class="hljs-string">&quot;GitHub 邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>创建SSH密钥</p><p>输入<code>ssh-keygen -t rsa -C "GitHub 邮箱"</code>，然后一直回车。</p><p>到用户目录（一般在C:&lt;用户名&gt;下），记事本打开公钥 id_rsa.pub文件并复制里面的内容。</p><p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击New SSH key。</p><p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSHkey 完成添加。</p><p>打开 Git Bash，输入 <code>ssh -T git@github.com</code> 出现 “Are yousure you want to connecting"，输入 yes 回车确认。</p><p>显示"Hi! You' ve successfully authenticated",则连接成功。</p><h2id="修改hexo的配置文件实现本地到github云端的上传">6.修改Hexo的配置文件实现本地到Github云端的上传</h2><p>安装hexo-deployer-git。</p><p>在 <code>_config.yml</code>中添加以下配置（如果配置已经存在，请将其替换为如下）:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:&lt;用户名&gt;/&lt;仓库名&gt;.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<span class="hljs-comment">#清除缓存</span><br>$ hexo d<span class="hljs-comment">#上传文件到仓库</span><br></code></pre></td></tr></table></figure><p>出现"Deploy Done"，则成功上传。</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>my first post</title>
    <link href="/2023/09/21/my-first-post/"/>
    <url>/2023/09/21/my-first-post/</url>
    
    <content type="html"><![CDATA[<p>$ E=mc^2 $</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/09/21/hello-world/"/>
    <url>/2023/09/21/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your veryfirst post. Check <a href="https://hexo.io/docs/">documentation</a> formore info. If you get any problems when using Hexo, you can find theanswer in <ahref="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> oryou can ask me on <ahref="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
